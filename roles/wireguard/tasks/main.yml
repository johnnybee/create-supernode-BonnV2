---
# tasks file for wireguard


# Add specified repository into sources list using specified filename.
- name: Add wireguard repository to system
  apt_repository:
    repo: deb http://deb.debian.org/debian/ unstable main
    state: present
    filename: wireguard

- name: Add pinning for the repository
  copy:
    dest: /etc/apt/preferences.d/limit-unstable
    content: |
      Package: *
      Pin: release a=unstable
      Pin-Priority: 90

- name: install wireguard
  apt:
    name: wireguard
    state: latest
    update_cache: yes

- name: install ebtables
  apt:
    name: ebtables
    state: latest

- name: install babeld for connection to node1
  apt:
    name: babeld
    state: latest

- name: install curl for the speedtest
  apt:
    name: curl
    state: latest

- name: copy wireguard files
  copy:
    src: "etc/wireguard/"
    dest: "/etc/wireguard"
    owner: root
    group: root
    mode: 0644

- name: configure wg0.conf
  template:
    src: "wg0.conf.j2"
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: 0644

- name: configure wg1.conf
  template:
    src: "wg1.conf.j2"
    dest: /etc/wireguard/wg1.conf
    owner: root
    group: root
    mode: 0644

- name: configure wg2.conf
  template:
    src: "wg2.conf.j2"
    dest: /etc/wireguard/wg2.conf
    owner: root
    group: root
    mode: 0644

- name: configure backbone on-up script
  template:
    src: "backbone_on-up.j2"
    dest: /etc/wireguard/backbone_on-up
    owner: root
    group: root
    mode: 0644

- name: configure bonn V2 on-up script
  template:
    src: "bonnV2_on-up.j2"
    dest: /etc/wireguard/bonnV2_on-up
    owner: root
    group: root
    mode: 0644

- name: change executable byte for files
  file:
    path: '/etc/wireguard/{{ item }}'
    owner: root
    group: root
    mode: 0744
  with_items:
    - 'backbone_on-up'
    - 'on-up'
    - 'bonnV2_on-up'

- name: enable wg0 and ensure it is not masked
  systemd:
    name: wg-quick@wg0
    enabled: yes
    masked: no

- name: enable wg1 and ensure it is not masked
  systemd:
    name: wg-quick@wg1
    enabled: yes
    masked: no

- name: enable wg2 and ensure it is not masked
  systemd:
    name: wg-quick@wg2
    enabled: yes
    masked: no

- name: install nginx and php
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - nginx
    - php-fpm

- name: configure default nginx file
  template:
    src: "default.nginx.j2"
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: 0644

- name: Ensure server tokens are off for nginx
  lineinfile:
      path: /etc/nginx/nginx.conf
      line: server_tokens off;
      insertafter: include /etc/nginx/sites-enabled/

- name: install certbot for https certificate
  package:
    name: certbot
    state: latest
  when: "wireguard_nginx_port == '443'"

- name: install python3-certbot-nginx for https certificate
  package:
    name: python3-certbot-nginx
    state: latest
  when: "wireguard_nginx_port == '443'"

- name: generate letsencrypt certificate
  shell: "certbot --nginx -n -d bonn{{ servernummer }}.kbu.freifunk.net --agree-tos --email freifunk-bonn@lists.kbu.freifunk.net --redirect"
  when: "wireguard_nginx_port == '443'"

- name: copy wireguard.php to webserverroot
  copy:
    src: "var/www/html/wireguard.php"
    dest: "/var/www/html/wireguard.php"
    owner: root
    group: root
    mode: 0644

- name: copy speed.php to webserverroot
  copy:
    src: "var/www/html/speed.php"
    dest: "/var/www/html/speed.php"
    owner: root
    group: root
    mode: 0644

- name: copy checkspeed.sh to /var/www
  copy:
    src: "var/www/checkspeed.sh"
    dest: "/var/www/checkspeed.sh"
    owner: root
    group: root
    mode: 0755

- name: Add a cronjob to check vpn speed
  cron:
    name: "check every hour the actual speed of the vpn connection"
    hour: "*"
    minute: 10
    job: "/var/www/checkspeed.sh"
    state: present
    user: root

- name: delete index.nginx-debian.html in /var/www
  file:
    path: /var/www/html/index.nginx-debian.html
    state: absent

- name: change /etc/sudoers to allow wireguard.php to use specific commands
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^www-data\s'
    line: 'www-data ALL=(ALL) NOPASSWD: /usr/bin/wg, /sbin/ip, /sbin/brctl'

- name: Add a cronjob to remove old sessions
  cron:
    name: "check every 10 minutes for old inactive wireguard session (last handshake older than 1 hour)"
    minute: "*/10"
    job: "wg set wg0 peer  \"$(wg |  awk 'BEGIN {RS=\"\"} /hour/ {print $2}'  | head -n 1)\" remove"
    state: present
    user: root

- name: Add a cronjob to remove old key after reboot
  cron:
    name: "check for old wireguard session after reboot"
    special_time: reboot
    job: "sleep 300 && /opt/remove_wg0_keys/remove_wg0_keys.sh"
    state: present
    user: root

- name: copy script to /opt
  copy:
    src: "opt/"
    dest: "/opt"
    owner: root
    group: root
    mode: 0744
